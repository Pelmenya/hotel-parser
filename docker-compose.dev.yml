services:
  postgres_postgis_parser:
    image: postgis/postgis
    container_name: postgres_postgis_parser
    restart: always
    volumes:
      - postgres_data_parser:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - custom_network

  adminer_pgadmin4_parser:
    image: dpage/pgadmin4
    container_name: adminer_pgadmin4_parser
    restart: always
    environment: 
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8095:80
    volumes:
      - pgadmin_data_parser:/var/lib/pgadmin
    networks:
      - custom_network 

  hotel-parser-1:
    build: ./ 
    container_name: hotel-parser-1
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - ${DEV_PORT_1}:3000
    depends_on:
      - postgres_postgis_parser
    environment:
      PORT: ${DEV_PORT_1}
      SECRET: ${SECRET}
      IS_DEV: "true"
      BASE_PARSE_URL: ${BASE_PARSE_URL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      INSTANCE_ID: ${INSTANCE_ID_1}
      TOTAL_INSTANCES: 1
      PROXY_HOST: ${PROXY_HOST_1}
      PROXY_PORT: ${PROXY_PORT_1}
      PROXY_LOGIN: ${PROXY_LOGIN_1}
      PROXY_PASSWORD: ${PROXY_PASSWORD_1}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_API_URL: ${OPENAI_BASE_API_URL}
      OPENAI_MODEL: ${OPENAI_MODEL}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_BUCKET: ${S3_BUCKET}
    working_dir: /app
    command: sh -c "cd /app; rm -rf dist; npm install; npm run start:dev"
    networks:
      - custom_network

volumes:
  postgres_data_parser:
  pgadmin_data_parser:

networks:
  custom_network:
    driver: bridge
